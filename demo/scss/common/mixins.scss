@import "flex.scss";
/* -------------------------------------------------------------
  Sass CSS3 Mixins! The Cross-Browser CSS3 Sass Library
  By: Matthieu Aussaguel, http://www.mynameismatthieu.com, @matthieu_tweets

  List of CSS3 Sass Mixins File to be @imported and @included as you need

  The purpose of this library is to facilitate the use of CSS3 on different browsers avoiding HARD TO READ and NEVER
  ENDING css files

  note: All CSS3 Properties are being supported by Safari 5
  more info: http://www.findmebyip.com/litmus/#css3-properties

------------------------------------------------------------- */



////
/// @author Matthieu Aussaguel
/// @group sass-css3-mixins
////

/* a little change by wumengqiang
 * changes and notes
 *   - remove khtml prefix . because its low rate of occupation
 *   - not include flexbox mixins , because it's too many code, so i put it another storage
          (git@github.com:wumengqiang/sass-flex-mixin.git forked from git@github.com:mastastealth/sass-flex-mixin.git).
 *   - not support browser
 *        - android 3.0 below
 *   - compatible properties
 *        - border-radius
*/



/// Adds a browser prefix to the property
/// @param {*} $property Property
/// @param {*} $value Value

@mixin css3-prefix($property, $value) {
    -webkit-#{$property}: #{$value};
    -moz-#{$property}: #{$value};
    -ms-#{$property}: #{$value};
    -o-#{$property}: #{$value};
    #{$property}: #{$value};
}

@mixin css3-prefix-options($property, $value, $prefix1: null , $prefix2: null, $prefix3:null, $prefix4:null){
    @each $prefix in $prefix1 , $prefix2, $prefix3,$prefix4 {
        @if $prefix {
            -#{$prefix}-#{$property}: #{$value};
        }
    }
    #{$property}: #{$value};
}

// set mutiple pixel ratio images. 1x and 2x.
// usage: @include background-image-set('hello')
//        @include background-image-set(hello.png, hello@2x.png)
//
@mixin background-image-set($images...){
    @if length($images) == 1 {
        background: url($images + '@2x.png') center center no-repeat;
        background-image: -webkit-image-set(url($images + '.png') 1x, url($images + '@2x.png') 2x);
    } @else if length($images) == 2{
        background: url(nth($images, 2)) center center no-repeat;
        background-image: -webkit-image-set(url(nth($images, 1)) 1x, url(nth($images, 2)) 2x);
    }
    background-size: contain;  // default background-size
}

/// Background Gradient
/// @param {Color} $startColor [#3C3C3C] - Start Color
/// @param {Color} $endColor [#999999] - End Color

@mixin background-gradient($startColor: #3C3C3C, $endColor: #999999) {
    background-color: $startColor;
    background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
    background-image: -webkit-linear-gradient(top, $startColor, $endColor);
    background-image:    -moz-linear-gradient(top, $startColor, $endColor);

    // gradient functions don't need -ms prefix which is not implement
    // background-image:     -ms-linear-gradient(top, $startColor, $endColor);
    background-image:         linear-gradient(top, $startColor, $endColor);
    filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}


/// Background Horizontal
/// @param {Color} $startColor [#3C3C3C] - Start Color
/// @param {Color} $endColor [#999999] - End Color

@mixin background-horizontal($startColor: #3C3C3C, $endColor: #999999) {
    background-color: $startColor;
    background-image: -webkit-gradient(linear, left top, right top, from($startColor), to($endColor));
    background-image: -webkit-linear-gradient(left, $startColor, $endColor);
    background-image:    -moz-linear-gradient(left, $startColor, $endColor);
    // background-image:     -ms-linear-gradient(left, $startColor, $endColor);
    background-image:      -o-linear-gradient(left, $startColor, $endColor);
    background-image:         linear-gradient(left, $startColor, $endColor);
    filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}', gradientType='1');
}


/// Background Radial
/// @param {Color} $startColor [#3C3C3C] - Start Color
/// @param {Percentage} $startPos [0%] - Start position
/// @param {Color} $endColor [#999999] - End Color
/// @param {Percentage} $endPos [100%] - End position

@mixin background-radial($startColor: #FFFFFF, $startPos: 0%, $endColor: #000000, $endPos:100%) {
    background: -moz-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);
    background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop($startPos,$startColor), color-stop($endPos,$endColor));
    background: -webkit-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
    background: -o-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
    // background: -ms-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
    background: radial-gradient(ellipse at center, $startColor $startPos,$endColor $endPos);
}


/// Box Sizing
/// @param {*} $type [border-box] - Type
/// @require {mixin} css3-prefix-options

@mixin box-sizing($type: border-box) {
    @include css3-prefix-options('box-sizing', $type, moz, webkit);
}


/// Column's count
/// @param {Integer} $count [3] - Count
/// @require {mixin} css3-prefix-options

@mixin column-count($count: 2) {
    @include css3-prefix-options('column-count', $count, moz, webkit);
}

/// gap between columns
/// @param {Integer} $count [3] - Count
@mixin column-gap($gap: 10){
    @include css3-prefix-options('column-gap', $gap, moz, webkit);
}


@mixin columns($count: 2, $gap: 10) {
    @include column-count($count);
    @include column-gap($gap);
}


/// Flip
/// @param {Double} $scaleX [-1] - ScaleX
/// @require {mixin} css3-prefix-options

@mixin flip($scaleX: -1) {
    @include css3-prefix-options('transform', scaleX($scaleX), moz, webkit);
    filter:            FlipH;
    -ms-filter:        "FlipH";
}

/// Font Face
/// @param {Font} $fontFamily [myFont] - Font Family
/// @param {String} $eotFileSrc ['myFont.eot'] - Eot File Source
/// @param {String} $woffFileSrc ['myFont.woff'] - Woff File Source
/// @param {String} $ttfFileSrc ['myFont.ttf'] - Ttf File Source
/// @param {String} $svgFileSrc ['myFont.svg'] - Svg File Source

@mixin font-face($fontFamily: myFont, $eotFileSrc: 'myFont.eot', $woffFileSrc: 'myFont.woff', $ttfFileSrc: 'myFont.ttf', $svgFileSrc: 'myFont.svg', $svgFontID: '#myFont') {
    font-family: $fontFamily;
    src: url($eotFileSrc)  format('eot'),
    url($woffFileSrc) format('woff'),
    url($ttfFileSrc)  format('truetype'),
    url($svgFileSrc + $svgFontID) format('svg');
}


/// Opacity
/// @param {Double} $opacity [0.5] - Opacity
/// @require {mixin} css3-prefix

@mixin opacity($opacity: 0.5) {
    $opacityMultiplied: ($opacity * 100);

    filter:         alpha(opacity=$opacityMultiplied);
    -ms-filter:     "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + $opacityMultiplied + ")";
    @include css3-prefix('opacity', $opacity);
}


/// Outline Radius
/// @param {Size} $radius [5px] - Radius
/// @require {mixin} css3-prefix

@mixin outline-radius($radius: 5px) {
    @include css3-prefix('outline-radius', $radius);
}

/// Rotate
///
/// CSS Matrix Rotation Calculator http://www.boogdesign.com/examples/transforms/matrix-calculator.html
/// @param {Double} $deg [0] - Degree
/// @param {Double} $m11 [0] - M11
/// @param {Double} $m12 [0] - M12
/// @param {Double} $m21 [0] - M21
/// @param {Double} $m22 [0] - M22
/// @require {mixin} css3-prefix

@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {
    @include css3-prefix('transform', rotate($deg + deg));
    filter: progid:DXImageTransform.Microsoft.Matrix(
                    M11=#{$m11}, M12=#{$m12}, M21=#{$m21}, M22=#{$m22}, sizingMethod='auto expand');
    zoom: 1;
}

/// Transform
/// @param {List} $params - Params
/// @require {mixin} css3-prefix-options

@mixin transform($params) {
    @include css3-prefix-options('transform', $params, moz, webkit);
}


/// Transform-Origin
/// @param {List} $params - Params
/// @require {mixin} css3-prefix-options

@mixin transform-origin($params) {
    @include css3-prefix-options('transform-origin', $params, moz, webkit);
}


// Transform-Style
/// @param {List} $params - Params
/// @require {mixin} css3-prefix-options

@mixin transform-style($style: preserve-3d) {
    @include css3-prefix-options('transform-style', $style, moz, webkit);
}

/// Transition
/// @param {List} $properties - Properties
/// @require {mixin} css3-prefix-options

@mixin transition($properties...) {

    @if length($properties) >= 1 {
        @include css3-prefix('transition', $properties);
    }

    @else {
        @include css3-prefix('transition',  "all 0.2s ease-in-out 0s");
    }
}

/// Keyframes
/// @param {*} $animation-name - Animation name
/// @content [Animation css]

@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}


/// Animation
/// @param {*} $str - name duration timing-function delay iteration-count direction fill-mode play-state ([http://www.w3schools.com/cssref/css3_pr_animation.asp](http://www.w3schools.com/cssref/css3_pr_animation.asp))
/// @require {mixin} css3-prefix-options

@mixin animation($str) {
    @include css3-prefix-options('animation', $str, moz, webkit);
}

@mixin backface-visibility($value: hidden){
    @include css3-prefix-options('backface-visibility', $value, moz, webkit);
}

@mixin perspective($value: 500){
    @include css3-prefix-options('perspective', $value, moz, webkit);
}


@mixin box-shadow($value: 0 4px 8px 0 rgba(0,0,0,.4)){
    @include css3-prefix-options('box-shadow', $value, webkit);
}

@mixin mobile-font-family{
    font-family:
    -apple-system, // OSX ^10.11 & iOS ^9 San Francisco & 苹方
        // English First

    "Helvetica Neue", // OSX
    Roboto, // Android 4.0以上
    "Droid Sans", // Android 4.0以下
    "Arial", // Win
    "Helvetica", //
    "Segoe UI", // Win ^8

        // Chinese Fallback
    "PingFangSC-Regular",
    "PingFang SC", // OSX ^10.11 & iOS ^9 苹方（华康信凭黑）
    "Hiragino Sans GB", // OSX ^10.6 冬青黑体
    "STHeiti", // OSX <10.6 & iOS <9 华文黑体
    "Heiti SC",
    "Microsoft YaHei", // Win 微软雅黑
    "Microsoft JhengHei", // Win 微软正黑
    "Source Han Sans SC", // SourceHan - begin 思源黑体
    "Noto Sans CJK SC",
    "Source Han Sans CN",
    "Noto Sans SC",
    "Source Han Sans TC",
    "Noto Sans CJK TC", // SourceHan - end
    "Microsoft Yahei",
    "微软雅黑",
    sans-serif; // System Fallback
}